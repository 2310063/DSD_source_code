`timescale 1ns / 1ps

module x_buf #(
parameter WIDTH = 32,
parameter DEPTH = 784,
parameter ADDR_WIDTH = $clog2(DEPTH),
parameter INIT_FILE = "C:/Users/User/Desktop/dss.txt.txt"
)(
input wire clk,
input wire x_buf_en_i,
input wire rst_i,
input wire [ADDR_WIDTH-1:0] x_buf_addr_i,
output reg [WIDTH-1:0] x_buf_data_o
);

reg [WIDTH-1:0] mem [0:DEPTH-1];
    generate
        if (INIT_FILE != "") begin: use_init_file
             initial
                $readmemh(INIT_FILE, mem, 0, DEPTH-1);
        end
        else begin: init_bram_to_zero
        integer ram_index;
        initial
            for (ram_index = 0; ram_index < DEPTH; ram_index = ram_index + 1)
                mem[ram_index] = {WIDTH{1'b0}};
        end
    endgenerate
    always @(posedge clk) begin
        if(!rst_i) begin
            x_buf_data_o <= {WIDTH{1'b0}};
        end
        else begin
            if (x_buf_en_i) begin
                x_buf_data_o <= mem[x_buf_addr_i];
             end
             else begin
                x_buf_data_o <= {WIDTH{1'b0}};
             end
         end
    end

endmodule
